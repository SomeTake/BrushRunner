//=============================================================================
//
// トロフィー[Trophy.cpp]
// Author : HAL東京 GP12B332-19 80277 染谷武志
//
//=============================================================================
#include "Main.h"
#include "Trophy.h"
#include "Model3D.h"
#include "ResourceManager.h"

#define TROPHY_POS		D3DXVECTOR3(0.0f, 150.0f, 0.0f)
#define TROPHY_ROT		D3DXVECTOR3(0.0f, 0.0f, D3DXToRadian(30))
#define TROPHY_MOVE		D3DXVECTOR3(0.0f, D3DXToRadian(1), 0.0f)

//=============================================================================
// コンストラクタ
//=============================================================================
Trophy::Trophy(const char* tag) : Model3D(tag)
{
	ResourceManager::Instance()->GetMesh(tag, &model);

	pos = TROPHY_POS;
	rot = D3DXVECTOR3(0.0f, 0.0f, D3DXToRadian(30));
	scl = D3DXVECTOR3(0.1f, 0.1f, 0.1f);
}

//=============================================================================
// デストラクタ
//=============================================================================
Trophy::~Trophy()
{
	model = NULL;
}

//=============================================================================
// 更新
//=============================================================================
void Trophy::Update()
{
	// 回転させる
	rot += TROPHY_MOVE;
	if (rot.y >= D3DX_PI)
	{
		rot.y = -D3DX_PI;
	}
}

////=============================================================================
//// 描画
////=============================================================================
//void Trophy::Draw()
//{
//	Draw();
//}